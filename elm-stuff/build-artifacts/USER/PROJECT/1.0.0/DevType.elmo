Elm.DevType = Elm.DevType || {};
Elm.DevType.make = function (_elm) {
   "use strict";
   _elm.DevType = _elm.DevType || {};
   if (_elm.DevType.values)
   return _elm.DevType.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "DevType",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm);
   var myStyle = $Html$Attributes.style(_L.fromArray([{ctor: "_Tuple2"
                                                      ,_0: "width"
                                                      ,_1: "100%"}
                                                     ,{ctor: "_Tuple2"
                                                      ,_0: "height"
                                                      ,_1: "40px"}
                                                     ,{ctor: "_Tuple2"
                                                      ,_0: "padding"
                                                      ,_1: "10px 0"}
                                                     ,{ctor: "_Tuple2"
                                                      ,_0: "font-size"
                                                      ,_1: "2em"}
                                                     ,{ctor: "_Tuple2"
                                                      ,_0: "text-align"
                                                      ,_1: "center"}]));
   var view = F2(function (address,
   string) {
      return A2($Html.div,
      _L.fromArray([]),
      _L.fromArray([A2($Html.div,
                   _L.fromArray([myStyle]),
                   _L.fromArray([$Html.text($Basics.toString(string.word))]))
                   ,A2($Html.input,
                   _L.fromArray([$Html$Attributes.placeholder("Text to reverse")
                                ,$Html$Attributes.value($Basics.toString(string.word))
                                ,myStyle]),
                   _L.fromArray([]))
                   ,A2($Html.div,
                   _L.fromArray([myStyle]),
                   _L.fromArray([$Html.text($Basics.toString(string.word))]))]));
   });
   var update = F2(function (newStr,
   oldStr) {
      return newStr;
   });
   var initialState = {_: {}
                      ,word: "rake db:migragte"};
   var model = {_: {}
               ,word: "rake db:migragte"};
   var WordState = function (a) {
      return {_: {},word: a};
   };
   var main = $StartApp$Simple.start({_: {}
                                     ,model: model
                                     ,update: update
                                     ,view: view});
   _elm.DevType.values = {_op: _op
                         ,main: main
                         ,WordState: WordState
                         ,model: model
                         ,initialState: initialState
                         ,update: update
                         ,view: view
                         ,myStyle: myStyle};
   return _elm.DevType.values;
};