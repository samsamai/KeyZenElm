Elm.TicTacToe = Elm.TicTacToe || {};
Elm.TicTacToe.make = function (_elm) {
   "use strict";
   _elm.TicTacToe = _elm.TicTacToe || {};
   if (_elm.TicTacToe.values)
   return _elm.TicTacToe.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "TicTacToe",
   $Basics = Elm.Basics.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Mouse = Elm.Mouse.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $TicTacToeModel = Elm.TicTacToeModel.make(_elm),
   $TicTacToeView = Elm.TicTacToeView.make(_elm);
   var undoButtonSignal = $TicTacToeView.undoMailbox.signal;
   var undoSignal = A2($Signal._op["<~"],
   $Basics.always($TicTacToeModel.undoMoves),
   undoButtonSignal);
   var newGameButtonSignal = $TicTacToeView.newGameMailbox.signal;
   var newGameSignal = A2($Signal._op["<~"],
   $Basics.always($Basics.always($TicTacToeModel.initialState)),
   newGameButtonSignal);
   var clickSignal = A2($Signal.sampleOn,
   $Mouse.clicks,
   $Mouse.position);
   var moveSignal = A2($Signal._op["<~"],
   $TicTacToeModel.processClick,
   clickSignal);
   var inputSignal = $Signal.mergeMany(_L.fromArray([moveSignal
                                                    ,newGameSignal
                                                    ,undoSignal]));
   var gameStateSignal = A3($Signal.foldp,
   F2(function (x,y) {
      return x(y);
   }),
   $TicTacToeModel.initialState,
   inputSignal);
   var main = A2($Signal._op["<~"],
   $TicTacToeView.view,
   gameStateSignal);
   _elm.TicTacToe.values = {_op: _op
                           ,clickSignal: clickSignal
                           ,newGameButtonSignal: newGameButtonSignal
                           ,undoButtonSignal: undoButtonSignal
                           ,newGameSignal: newGameSignal
                           ,undoSignal: undoSignal
                           ,moveSignal: moveSignal
                           ,inputSignal: inputSignal
                           ,gameStateSignal: gameStateSignal
                           ,main: main};
   return _elm.TicTacToe.values;
};